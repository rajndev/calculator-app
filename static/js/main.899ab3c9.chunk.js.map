{"version":3,"sources":["components/display/Display.js","components/keypad/Keypad.js","components/calculator/parentheses.js","components/calculator/Calculator.js","reportWebVitals.js","index.js"],"names":["Display","props","textareaRef","React","createRef","this","getRef","$","on","e","console","log","which","preventDefault","current","setSelectionRange","blur","focus","className","type","id","value","ref","onChange","onSelect","Component","Keypad","name","onClick","onClearKeyClick","target","onKeyClick","onBackKeyClick","onEqualsKeyClick","ParenthesesProcessor","getNextParentheses","calcComponent","state","cursorPos","start","runningValue","lastIndexOf","Calculator","handleKeyClick","key","length","setState","prevState","concat","end","setInputSelectionRange","scrollTop","scrollHeight","insertTextIntoDisplay","handleInputChange","handleSelect","event","selectionStart","selectionEnd","handleEqualsClick","result","includes","alert","math","toString","newCursorPos","handleClearClick","handleBackClick","selectedText","substring","deleteTextFromDisplay","sliced","slice","updatedText","cursorStartPos","cursorEndPos","textBeforeCursorStart","textAfterCursorEnd","allSelected","getTextareaRef","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.899ab3c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport $ from \"jquery\"\r\nimport './display.css';\r\n\r\nclass Display extends Component {\r\n    constructor(props){\r\n        super(props)\r\n       this.textareaRef = React.createRef(null);\r\n    }\r\n    \r\n    componentDidMount () {\r\n        this.props.getRef(this.textareaRef);\r\n        $(\"#user-inputs\").on( \"keypress cut copy paste\", function(e) {\r\n            console.log(e.which);\r\n            if(e.which >= 48 && e.which <= 57 \r\n                || e.which === 13 \r\n                || e.which === 46 \r\n                || e.which === 47 \r\n                || e.which === 42 \r\n                || e.which === 43 \r\n                || e.which === 45 \r\n                || e.which === 40 \r\n                || e.which === 41){\r\n                return true;\r\n            }\r\n            else{\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n            // if( e.key < 144 || e.key > 153 || e.key !== 'Backspace')\r\n            // {\r\n            //     e.preventDefault();\r\n            //     return false;\r\n            // }\r\n        });\r\n      //  this.textareaRef.current.focus();\r\n      this.textareaRef.current.setSelectionRange(0, 0);\r\n      this.textareaRef.current.blur();\r\n      this.textareaRef.current.focus();\r\n      this.textareaRef.current.setSelectionRange(0, 0);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"display\">\r\n                <div>\r\n                    <textarea \r\n                    type=\"text\" \r\n                    id=\"user-inputs\" \r\n                    className=\"user-inputs\" \r\n                    value={this.props.value} \r\n                    ref={this.textareaRef}\r\n                    onChange={this.props.onChange}\r\n                    onSelect={this.props.onSelect}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Display;","import React, { Component } from 'react'\r\nimport './keypad.css'\r\n\r\nclass Keypad extends Component {\r\n    render(e) {\r\n        return (\r\n            <div className=\"keys\">\r\n                <div className=\"row\">\r\n                    <button name=\"C\" className=\"helper\" onClick={(e) => this.props.onClearKeyClick(e.target.name)}>C</button>\r\n                    <button name=\"%\" className=\"helper\" onClick={(e) => this.props.onKeyClick(e.target.name)}>%</button>\r\n                    <button name=\"()\" className=\"helper\" onClick={(e) => this.props.onKeyClick(e.target.name)}>( )</button>\r\n                    <button name=\"+\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>+</button>\r\n\r\n                    <button name=\"7\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>7</button>\r\n                    <button name=\"8\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>8</button>\r\n                    <button name=\"9\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>9</button>\r\n                    <button name=\"-\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>-</button>\r\n\r\n                    <button name=\"4\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>4</button>\r\n                    <button name=\"5\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>5</button>\r\n                    <button name=\"6\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>6</button>\r\n                    <button name=\"*\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>x</button>\r\n\r\n                    <button name=\"1\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>1</button>\r\n                    <button name=\"2\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>2</button>\r\n                    <button name=\"3\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>3</button>\r\n                    <button name=\"/\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>÷</button>\r\n\r\n                    <button name=\"0\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>0</button>\r\n                    <button name=\".\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>.</button>\r\n                    <button name=\"←\"  onClick={(e) => this.props.onBackKeyClick(e.target.name)}>←</button>\r\n                    <button name=\"=\" className=\"equals-key\" onClick={(e) => this.props.onEqualsKeyClick(e)}>=</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Keypad;\r\n","class ParenthesesProcessor {\r\n    static getNextParentheses = (calcComponent) => {\r\n        if(calcComponent.state.cursorPos.start === 0)\r\n        {\r\n            return \"(\";\r\n        }\r\n        else\r\n        {\r\n             let leftParentheseNearestIndex = calcComponent.state.runningValue.lastIndexOf(\"(\", calcComponent.state.cursorPos.start - 1);\r\n             let rightParentheseNearestIndex = calcComponent.state.runningValue.lastIndexOf(\")\", calcComponent.state.cursorPos.start - 1);\r\n     \r\n             //if the closest parentheses from the left of the cursor is the left parentheses  \r\n             if(leftParentheseNearestIndex > rightParentheseNearestIndex)\r\n             {\r\n             // calcComponent.setState({parentheses: \"(\"});\r\n                 return \")\";\r\n             }\r\n             else\r\n             {\r\n                 //calcComponent.setState({parentheses: \")\"});\r\n                 return \"(\";\r\n             }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ParenthesesProcessor;","import React, { Component } from 'react'\r\nimport Display from '../display/Display'\r\nimport Keypad from '../keypad/Keypad'\r\nimport * as math from 'mathjs'\r\nimport './calculator.css';\r\nimport ParenthesesProcessor from './parentheses';\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            runningValue: \"\",\r\n            cursorPos: {start: 0, end: 0},\r\n        };\r\n        this.textareaRef = React.createRef(null);\r\n    }\r\n\r\n    handleKeyClick = (key) => {\r\n        if(key === \"()\"){\r\n            key = ParenthesesProcessor.getNextParentheses(this);\r\n        }\r\n\r\n        //if the cursor is currently at the end of the running display value\r\n        if(this.state.cursorPos.start === this.state.runningValue.length + 1 || this.state.runningValue === \"\"){\r\n            this.setState(prevState => ({\r\n                runningValue: prevState.runningValue.concat(key)\r\n            }));\r\n\r\n            this.setState(prevState => {\r\n                return {cursorPos:{\r\n                    start: prevState.cursorPos.start + 1,\r\n                    end: prevState.cursorPos.end + 1\r\n                    },\r\n                }\r\n            }, () => {\r\n                this.setInputSelectionRange(this.state.cursorPos.start, this.state.cursorPos.start);\r\n            });\r\n\r\n            //scroll up the text in the display when it reaches the bottom of the textarea\r\n            if(this.textareaRef != null){\r\n                this.textareaRef.current.scrollTop = this.textareaRef.current.scrollHeight;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.insertTextIntoDisplay(key);\r\n        }\r\n    }\r\n\r\n    //the backspace key on the keyboard is pressed\r\n    handleInputChange = () => {\r\n        this.setState({runningValue: this.textareaRef.current.value});\r\n    }\r\n\r\n    handleSelect = (event) => {\r\n        if(this.state.runningValue === \"\"){\r\n          this.setState({\r\n            cursorPos: {\r\n              start: 0,\r\n              end: 0\r\n            },\r\n          });\r\n          this.setInputSelectionRange(0, 0);\r\n        }\r\n        else{\r\n            this.setState({\r\n                cursorPos: {\r\n                  start: event.target.selectionStart,\r\n                  end: event.target.selectionEnd\r\n                }\r\n              }, () => {\r\n                this.setInputSelectionRange(this.state.cursorPos.start, this.state.cursorPos.end);\r\n              });\r\n        }\r\n    }\r\n\r\n    handleEqualsClick = () => {\r\n        let result = 0;\r\n\r\n        try {\r\n            if(this.state.runningValue.includes(\"/0\")){\r\n                alert(\"Cannot divide by 0! Please check your input.\");\r\n                return;\r\n            }\r\n            else{\r\n                //calculate the math expression on the display\r\n                result = math.evaluate(this.state.runningValue);\r\n                this.setState({runningValue: result.toString()});\r\n                let newCursorPos = result.toString().length;\r\n                this.setState({\r\n                    cursorPos: {\r\n                    start: newCursorPos,\r\n                    end: newCursorPos\r\n                    },\r\n                }, () => {\r\n                    this.setInputSelectionRange(newCursorPos, newCursorPos);\r\n                });\r\n            }\r\n        }\r\n        catch {\r\n            alert(\"Invalid calculation!\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleClearClick = () => {\r\n        this.setState({ \r\n            runningValue: \"\",\r\n            cursorPos: {start: 0, end: 0},\r\n        });\r\n        this.setInputSelectionRange(0, 0);\r\n    }\r\n\r\n    handleBackClick = () => {\r\n        let selectedText = this.state.runningValue.substring(this.textareaRef.current.selectionStart, this.textareaRef.current.selectionEnd);\r\n\r\n        if(this.state.runningValue === \"\" || this.state.cursorPos.start === 0){\r\n            this.setInputSelectionRange(0, 0);\r\n            return;\r\n        } //if a text selection exists or no selection exists while the textarea is selected\r\n        else if(selectedText || selectedText === \"\"){\r\n            this.deleteTextFromDisplay(selectedText);\r\n        }\r\n        else{\r\n            let sliced = this.state.runningValue.slice(0, -1);\r\n            this.setState({ runningValue: sliced });\r\n        }\r\n    }\r\n\r\n    insertTextIntoDisplay = (key, selectedText) => {\r\n        let cursorStartPos = this.state.cursorPos.start;\r\n        let cursorEndPos = this.state.cursorPos.end;\r\n        let textBeforeCursorStart = this.state.runningValue.substring(0, cursorStartPos);\r\n        let textAfterCursorEnd = this.state.runningValue.substring(cursorEndPos, this.state.runningValue.length);\r\n        let allSelected = selectedText === this.state.runningValue;\r\n        let updatedText;\r\n\r\n        if(key === \"(\" || key === \")\"){\r\n            key = ParenthesesProcessor.getNextParentheses(this);\r\n        }\r\n\r\n        //if the entire input is selected\r\n        if(allSelected){\r\n            updatedText = key;\r\n        }\r\n        else{\r\n            updatedText = textBeforeCursorStart + key + textAfterCursorEnd;\r\n        }\r\n\r\n        this.setState({\r\n            runningValue: updatedText\r\n        });\r\n        \r\n        this.setState(prevState => {\r\n            if(selectedText !== \"\"){\r\n                if(allSelected){\r\n                    return {cursorPos:{\r\n                        start: 1,\r\n                        end: 1\r\n                        },\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                     return {cursorPos:{\r\n                        start: cursorStartPos + 1,\r\n                        end: cursorEndPos + 1\r\n                        },\r\n                    }\r\n                }\r\n               \r\n            }\r\n            else if(selectedText === \"\")\r\n            {\r\n                return {cursorPos:{\r\n                    start: prevState.cursorPos.start + 1,\r\n                    end: prevState.cursorPos.end + 1\r\n                    },\r\n                }\r\n            }\r\n        }, () => {\r\n            this.setInputSelectionRange(this.state.cursorPos.start, this.state.cursorPos.start);\r\n        });\r\n    }\r\n\r\n    deleteTextFromDisplay = (selectedText) => {\r\n        let cursorStartPos = this.textareaRef.current.selectionStart;\r\n        let cursorEndPos = this.textareaRef.current.selectionEnd;\r\n        let textBeforeCursorStart = this.state.runningValue.substring(0, cursorStartPos);\r\n        let textAfterCursorEnd = this.state.runningValue.substring(cursorEndPos, this.state.runningValue.length);\r\n        let updatedText =  selectedText ? textBeforeCursorStart + textAfterCursorEnd : textBeforeCursorStart.slice(0, -1) + textAfterCursorEnd;\r\n\r\n        if(updatedText){\r\n            this.setState({runningValue: updatedText});\r\n            if(selectedText){\r\n                this.setState({\r\n                    cursorPos: { start: cursorStartPos, end: cursorEndPos }}, () => {\r\n                    this.setInputSelectionRange(this.state.cursorPos.start, this.state.cursorPos.start);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                this.setState(prevState => {\r\n                    return { cursorPos: { start: prevState.cursorPos.start - 1, end: prevState.cursorPos.end - 1}};\r\n                },  () => {\r\n                    this.setInputSelectionRange(this.state.cursorPos.start, this.state.cursorPos.start);\r\n                });\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.setState({runningValue: \"\", cursorPos: {start: 0, end: 0}});\r\n            this.setInputSelectionRange(0, 0);  \r\n        }\r\n    }\r\n\r\n    setInputSelectionRange = (selectionStart, selectionEnd) => {\r\n        this.textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\r\n        this.textareaRef.current.blur();\r\n        this.textareaRef.current.focus();\r\n        this.textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\r\n    }\r\n\r\n    getTextareaRef = (ref) => {\r\n        this.textareaRef = ref;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Display \r\n                    value={this.state.runningValue} \r\n                    onChange={() => this.handleInputChange()} \r\n                    onSelect={(event) => this.handleSelect(event)}\r\n                    getRef={(ref) => this.getTextareaRef(ref)}/>\r\n\r\n                <Keypad \r\n                    onKeyClick={i => this.handleKeyClick(i)}\r\n                    onEqualsKeyClick={() => this.handleEqualsClick()}\r\n                    onClearKeyClick={() => this.handleClearClick()}\r\n                    onBackKeyClick={() => this.handleBackClick()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Calculator from './components/calculator/Calculator';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Calculator />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}