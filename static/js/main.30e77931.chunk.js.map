{"version":3,"sources":["components/display/Display.js","components/keypad/Keypad.js","components/calculator/ParenthesesProcessor.js","components/calculator/Calculator.js","reportWebVitals.js","index.js"],"names":["Display","props","textareaRef","React","createRef","this","getRef","$","on","event","KeyboardKeys","NUMPAD_ZERO_KEY","NUMPAD_NINE_KEY","NUMPAD_DOT_KEY","NUMPAD_PLUS_KEY","NUMPAD_MINUS_KEY","NUMPAD_MULTIPLY_KEY","NUMPAD_DIVIDE_KEY","Object","freeze","which","preventDefault","current","setSelectionRange","blur","focus","className","type","id","value","ref","onChange","onSelect","Component","Keypad","name","onClick","e","onClearKeyClick","target","onKeyClick","onBackKeyClick","onEqualsKeyClick","ParenthesesProcessor","getNextParenthesis","calcComponent","state","cursorPosition","start","runningValue","lastIndexOf","Calculator","handleKeyClick","key","cursorIsAtEnd","length","setState","prevState","concat","end","setInputSelectionRange","scrollTop","scrollHeight","insertTextIntoDisplay","cursorStartPosition","selectionStart","cursorEndPosition","selectionEnd","textBeforeCursorStart","substring","textAfterCursorEnd","updatedText","handleInputChange","handleSelect","handleEqualsClick","result","includes","alert","math","toString","newCursorPosition","handleClearClick","handleBackClick","cursorIsAtBeginning","selectedText","deleteTextFromDisplay","slice","getTextareaRef","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30e77931.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport $ from \"jquery\"\r\nimport './display.css';\r\n\r\nclass Display extends Component {\r\n    constructor(props){\r\n        super(props)\r\n       this.textareaRef = React.createRef(null);\r\n    }\r\n    \r\n    componentDidMount () {\r\n        this.props.getRef(this.textareaRef);\r\n        $(\"#user-inputs\").on( \"keypress cut copy paste\", function(event) {\r\n            const KeyboardKeys = {\r\n                NUMPAD_ZERO_KEY: 48,\r\n                NUMPAD_NINE_KEY: 57,\r\n                NUMPAD_DOT_KEY: 46,\r\n                NUMPAD_PLUS_KEY: 43,\r\n                NUMPAD_MINUS_KEY: 45,\r\n                NUMPAD_MULTIPLY_KEY: 42,\r\n                NUMPAD_DIVIDE_KEY: 47,\r\n             };\r\n             Object.freeze(KeyboardKeys);\r\n            //TODO: consider refactoring these hardcoded key code numbers into a JS enum\r\n            if(event.which >= KeyboardKeys.NUMPAD_ZERO_KEY && event.which <= KeyboardKeys.NUMPAD_NINE_KEY\r\n                || event.which === KeyboardKeys.NUMPAD_DOT_KEY \r\n                || event.which === KeyboardKeys.NUMPAD_PLUS_KEY \r\n                || event.which === KeyboardKeys.NUMPAD_MINUS_KEY \r\n                || event.which === KeyboardKeys.NUMPAD_MULTIPLY_KEY \r\n                || event.which === KeyboardKeys.NUMPAD_DIVIDE_KEY ){\r\n                return true;\r\n            }\r\n            else{\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n        });\r\n\r\n      this.textareaRef.current.setSelectionRange(0, 0);\r\n      this.textareaRef.current.blur();\r\n      this.textareaRef.current.focus();\r\n      this.textareaRef.current.setSelectionRange(0, 0);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"display\">\r\n                <div>\r\n                    <textarea \r\n                    type=\"text\" \r\n                    id=\"user-inputs\" \r\n                    className=\"user-inputs\" \r\n                    value={this.props.value} \r\n                    ref={this.textareaRef}\r\n                    onChange={this.props.onChange}\r\n                    onSelect={this.props.onSelect}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Display;","import React, { Component } from 'react'\r\nimport './keypad.css'\r\n\r\nclass Keypad extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"keys\">\r\n                <div className=\"row\">\r\n                    <button name=\"C\" className=\"helper\" onClick={(e) => this.props.onClearKeyClick(e.target.name)}>C</button>\r\n                    <button name=\"%\" className=\"helper\" onClick={(e) => this.props.onKeyClick(e.target.name)}>%</button>\r\n                    <button name=\"()\" className=\"helper\" onClick={(e) => this.props.onKeyClick(e.target.name)}>( )</button>\r\n                    <button name=\"+\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>+</button>\r\n\r\n                    <button name=\"7\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>7</button>\r\n                    <button name=\"8\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>8</button>\r\n                    <button name=\"9\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>9</button>\r\n                    <button name=\"-\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>-</button>\r\n\r\n                    <button name=\"4\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>4</button>\r\n                    <button name=\"5\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>5</button>\r\n                    <button name=\"6\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>6</button>\r\n                    <button name=\"*\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>x</button>\r\n\r\n                    <button name=\"1\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>1</button>\r\n                    <button name=\"2\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>2</button>\r\n                    <button name=\"3\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>3</button>\r\n                    <button name=\"/\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>÷</button>\r\n\r\n                    <button name=\"0\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>0</button>\r\n                    <button name=\".\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>.</button>\r\n                    <button name=\"←\"  onClick={(e) => this.props.onBackKeyClick(e.target.name)}>←</button>\r\n                    <button name=\"=\" className=\"equals-key\" onClick={(e) => this.props.onEqualsKeyClick(e)}>=</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Keypad;\r\n","class ParenthesesProcessor {\r\n    static getNextParenthesis = (calcComponent) => {\r\n        if (calcComponent.state.cursorPosition.start === 0) {\r\n            return \"(\";\r\n        } else {\r\n            let leftParentheseNearestIndex = calcComponent.state.runningValue.lastIndexOf(\"(\", calcComponent.state.cursorPosition.start - 1);\r\n            let rightParentheseNearestIndex = calcComponent.state.runningValue.lastIndexOf(\")\", calcComponent.state.cursorPosition.start - 1);\r\n     \r\n            if (leftParentheseNearestIndex > rightParentheseNearestIndex) {\r\n                return \")\";\r\n            } else {\r\n                return \"(\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ParenthesesProcessor;","import React, { Component } from 'react'\r\nimport Display from '../display/Display'\r\nimport Keypad from '../keypad/Keypad'\r\nimport * as math from 'mathjs'\r\nimport './calculator.css';\r\nimport ParenthesesProcessor from './ParenthesesProcessor';\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            runningValue: \"\",\r\n            cursorPosition: {start: 0, end: 0},\r\n        };\r\n        this.textareaRef = React.createRef(null);\r\n    }\r\n\r\n    handleKeyClick = (key) => {\r\n        if (key === \"()\") {\r\n            key = ParenthesesProcessor.getNextParenthesis(this);\r\n        }\r\n\r\n        let cursorIsAtEnd = this.state.cursorPosition.start === this.state.runningValue.length + 1;\r\n        if (this.state.runningValue === \"\" || cursorIsAtEnd) {\r\n            this.setState(prevState => ({\r\n                runningValue: prevState.runningValue.concat(key),\r\n                cursorPosition:{\r\n                    start: prevState.cursorPosition.start + 1,\r\n                    end: prevState.cursorPosition.end + 1\r\n                    },\r\n                }), () => {\r\n                    this.setInputSelectionRange(this.state.cursorPosition.start, this.state.cursorPosition.start);\r\n                }\r\n            );\r\n\r\n            //scroll up the text in the display when it reaches the bottom of the textarea\r\n            if (this.textareaRef != null) {\r\n                this.textareaRef.current.scrollTop = this.textareaRef.current.scrollHeight;\r\n            }\r\n\r\n            return;\r\n        }\r\n            this.insertTextIntoDisplay(key);\r\n    }\r\n\r\n    insertTextIntoDisplay = (key) => {\r\n        let cursorStartPosition = this.textareaRef.current.selectionStart;\r\n        let cursorEndPosition = this.textareaRef.current.selectionEnd;\r\n        let textBeforeCursorStart = this.state.runningValue.substring(0, cursorStartPosition);\r\n        let textAfterCursorEnd = this.state.runningValue.substring(cursorEndPosition, this.state.runningValue.length);\r\n\r\n        if (key === \"(\" || key === \")\") {\r\n            key = ParenthesesProcessor.getNextParenthesis(this);\r\n        }\r\n\r\n        let updatedText = textBeforeCursorStart + key + textAfterCursorEnd;\r\n\r\n        this.setState({\r\n            runningValue: updatedText,\r\n            cursorPosition: { start: cursorStartPosition + 1, end: cursorEndPosition + 1}\r\n        }, () => {\r\n            this.setInputSelectionRange(this.state.cursorPosition.start, this.state.cursorPosition.start);\r\n        });\r\n    }\r\n\r\n    handleInputChange = () => {\r\n        this.setState({runningValue: this.textareaRef.current.value});\r\n    }\r\n\r\n    handleSelect = (event) => {\r\n        if (this.state.runningValue === \"\") {\r\n          this.setState({\r\n            cursorPosition: {\r\n              start: 0,\r\n              end: 0\r\n            },\r\n          });\r\n          this.setInputSelectionRange(0, 0);\r\n          return;\r\n        } \r\n        \r\n        this.setState({\r\n            cursorPosition: {\r\n              start: event.target.selectionStart,\r\n              end: event.target.selectionEnd\r\n            }\r\n            }, () => {\r\n                this.setInputSelectionRange(this.state.cursorPosition.start, this.state.cursorPosition.end);\r\n            }\r\n        );\r\n    }\r\n\r\n    handleEqualsClick = () => {\r\n        let result = 0;\r\n\r\n        try {\r\n            if (this.state.runningValue.includes(\"/0\")) {\r\n                alert(\"Cannot divide by 0! Please check your input.\");\r\n                return;\r\n            }\r\n\r\n            result = math.evaluate(this.state.runningValue);\r\n            this.setState({runningValue: result.toString()});\r\n            let newCursorPosition = result.toString().length;\r\n            this.setState({\r\n                cursorPosition: {\r\n                start: newCursorPosition,\r\n                end: newCursorPosition\r\n                },\r\n            }, () => {\r\n                this.setInputSelectionRange(newCursorPosition, newCursorPosition);\r\n            });\r\n            \r\n        } catch {\r\n            alert(\"Invalid calculation!\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleClearClick = () => {\r\n        this.setState({ \r\n            runningValue: \"\",\r\n            cursorPosition: {start: 0, end: 0},\r\n        });\r\n        this.setInputSelectionRange(0, 0);\r\n    }\r\n\r\n    handleBackClick = () => {\r\n        let cursorIsAtBeginning = this.textareaRef.current.selectionStart === 0 && this.textareaRef.current.selectionEnd === 0; \r\n        if (this.state.runningValue === \"\" || cursorIsAtBeginning) {\r\n            this.setInputSelectionRange(0, 0);\r\n            return;\r\n        }\r\n        let selectedText = this.state.runningValue.substring(this.textareaRef.current.selectionStart, this.textareaRef.current.selectionEnd);\r\n        this.deleteTextFromDisplay(selectedText);\r\n    }\r\n\r\n    deleteTextFromDisplay = (selectedText) => {\r\n        let cursorStartPosition = this.textareaRef.current.selectionStart;\r\n        let cursorEndPosition = this.textareaRef.current.selectionEnd;\r\n        let textBeforeCursorStart = this.state.runningValue.substring(0, cursorStartPosition);\r\n        let textAfterCursorEnd = this.state.runningValue.substring(cursorEndPosition, this.state.runningValue.length);\r\n        let updatedText =  selectedText ? textBeforeCursorStart + textAfterCursorEnd : textBeforeCursorStart.slice(0, -1) + textAfterCursorEnd;\r\n\r\n        if (updatedText) {\r\n            this.setState({runningValue: updatedText});\r\n            if (selectedText) {\r\n                this.setState({\r\n                    cursorPosition: { start: cursorStartPosition, end: cursorEndPosition }}, () => {\r\n                    this.setInputSelectionRange(this.state.cursorPosition.start, this.state.cursorPosition.start);\r\n                });\r\n                return;\r\n            }\r\n\r\n            this.setState(prevState => {\r\n                return { cursorPosition: { start: prevState.cursorPosition.start - 1, end: prevState.cursorPosition.end - 1}};\r\n            },  () => {\r\n                this.setInputSelectionRange(this.state.cursorPosition.start, this.state.cursorPosition.start);\r\n            });\r\n            return;\r\n        }\r\n\r\n        //else reset the display since the entire expression was selected\r\n        this.setState({runningValue: \"\", cursorPosition: {start: 0, end: 0}});\r\n        this.setInputSelectionRange(0, 0);\r\n    }\r\n\r\n    setInputSelectionRange = (selectionStart, selectionEnd) => {\r\n        this.textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\r\n        this.textareaRef.current.blur();\r\n        this.textareaRef.current.focus();\r\n        this.textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\r\n    }\r\n\r\n    getTextareaRef = (ref) => {\r\n        this.textareaRef = ref;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Display \r\n                    value={this.state.runningValue} \r\n                    onChange={() => this.handleInputChange()} \r\n                    onSelect={(event) => this.handleSelect(event)}\r\n                    getRef={(ref) => this.getTextareaRef(ref)}/>\r\n\r\n                <Keypad \r\n                    onKeyClick={i => this.handleKeyClick(i)}\r\n                    onEqualsKeyClick={() => this.handleEqualsClick()}\r\n                    onClearKeyClick={() => this.handleClearClick()}\r\n                    onBackKeyClick={() => this.handleBackClick()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Calculator from './components/calculator/Calculator';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Calculator />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}