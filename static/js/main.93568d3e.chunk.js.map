{"version":3,"sources":["components/display/Display.js","components/keypad/Keypad.js","components/calculator/Calculator.js","reportWebVitals.js","index.js"],"names":["Display","props","textareaRef","React","createRef","this","getRef","$","on","e","key","preventDefault","current","focus","className","type","id","value","ref","onChange","onSelect","Component","Keypad","name","onClick","onClearKeyClick","target","onKeyClick","onBackKeyClick","onEqualsKeyClick","Calculator","handleKeyClick","runningValueIsEmpty","state","runningValue","length","selectedStateIsFalse","selected","setState","prevState","concat","scrollTop","scrollHeight","cursorPosition","cursorPos","start","textBeforeCursorPosition","substring","textAfterCursorPosition","updatedText","end","setSelectionRange","blur","handleInputChange","selectionStartPos","selectionEndPos","slice","handleSelect","event","selectionStart","selectionEnd","handleEqualsClick","result","running","includes","alert","math","toString","newCursorPos","parenthesesDeleted","parenthesesCount","parentheses","handleClearClick","handleBackClick","sliced","getTextareaRef","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93568d3e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport $ from \"jquery\"\r\nimport './display.css';\r\n\r\nclass Display extends Component {\r\n    constructor(props){\r\n        super(props)\r\n       this.textareaRef = React.createRef(null);\r\n    }\r\n    \r\n    componentDidMount () {\r\n        this.props.getRef(this.textareaRef);\r\n        $(\"#user-inputs\").on( \"keypress\", function(e) {\r\n            if(e.key !== 'Backspace')\r\n            {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        });\r\n        this.textareaRef.current.focus();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"display\">\r\n                <div>\r\n                    <textarea \r\n                    type=\"text\" \r\n                    id=\"user-inputs\" \r\n                    className=\"user-inputs\" \r\n                    value={this.props.value} \r\n                    ref={this.textareaRef}\r\n                    onChange={() => this.props.onChange()}\r\n                    onSelect={this.props.onSelect}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Display;","import React, { Component } from 'react'\r\n// import Key from '../key/Key'\r\nimport './keypad.css'\r\n\r\nclass Keypad extends Component {\r\n    render(e) {\r\n        return (\r\n            <div className=\"keys\">\r\n                <div className=\"row\">\r\n                    <button name=\"C\" className=\"helper\" onClick={(e) => this.props.onClearKeyClick(e.target.name)}>C</button>\r\n                    <button name=\"(\" className=\"helper\" onClick={(e) => this.props.onKeyClick(e.target.name)}>(</button>\r\n                    <button name=\")\" className=\"helper\" onClick={(e) => this.props.onKeyClick(e.target.name)}>)</button>\r\n                    <button name=\"+\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>+</button>\r\n\r\n                    <button name=\"7\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>7</button>\r\n                    <button name=\"8\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>8</button>\r\n                    <button name=\"9\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>9</button>\r\n                    <button name=\"-\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>-</button>\r\n\r\n                    <button name=\"4\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>4</button>\r\n                    <button name=\"5\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>5</button>\r\n                    <button name=\"6\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>6</button>\r\n                    <button name=\"*\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>x</button>\r\n\r\n                    <button name=\"1\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>1</button>\r\n                    <button name=\"2\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>2</button>\r\n                    <button name=\"3\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>3</button>\r\n                    <button name=\"/\" className=\"operator\" onClick={(e) => this.props.onKeyClick(e.target.name)}>÷</button>\r\n\r\n                    <button name=\"0\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>0</button>\r\n                    <button name=\".\"  onClick={(e) => this.props.onKeyClick(e.target.name)}>.</button>\r\n                    <button name=\"←\"  onClick={(e) => this.props.onBackKeyClick(e.target.name)}>←</button>\r\n                    <button name=\"=\" className=\"equals-key\" onClick={(e) => this.props.onEqualsKeyClick(e)}>=</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Keypad;\r\n","import React, { Component } from 'react'\r\nimport Display from '../display/Display'\r\nimport Keypad from '../keypad/Keypad'\r\nimport * as math from 'mathjs'\r\nimport './calculator.css';\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            runningValue: \"\",\r\n            cursorPos: {start: 0, end: 0},\r\n            selected: false\r\n        };\r\n\r\n        this.textareaRef = React.createRef(null);\r\n    }\r\n\r\n    handleKeyClick = (key) => {\r\n        let runningValueIsEmpty = this.state.runningValue.length === 0;\r\n        let selectedStateIsFalse = this.state.selected === false;\r\n\r\n        if(runningValueIsEmpty || !runningValueIsEmpty && selectedStateIsFalse){\r\n                this.setState(prevState => ({\r\n                    runningValue: prevState.runningValue.concat(key)\r\n                }));\r\n\r\n                if(this.textareaRef != null){\r\n                    this.textareaRef.current.scrollTop = this.textareaRef.current.scrollHeight;\r\n                  }\r\n        }\r\n        else {\r\n            let cursorPosition = this.state.cursorPos.start;\r\n            let textBeforeCursorPosition = this.state.runningValue.substring(0, cursorPosition);\r\n            let textAfterCursorPosition = this.state.runningValue.substring(cursorPosition, this.state.runningValue.length);\r\n            let updatedText = textBeforeCursorPosition + key + textAfterCursorPosition;\r\n            this.setState(prevState => ({\r\n                runningValue: updatedText\r\n            }));\r\n                this.setState(prevState => ({\r\n                    cursorPos: {\r\n                    start: prevState.cursorPos.start + 1,\r\n                    end: prevState.cursorPos.end + 1\r\n                    }\r\n                }), () => {\r\n                    this.textareaRef.current.setSelectionRange(this.state.cursorPos.start, this.state.cursorPos.end);\r\n                    this.textareaRef.current.blur();\r\n                    this.textareaRef.current.focus();\r\n                    this.textareaRef.current.setSelectionRange(this.state.cursorPos.start, this.state.cursorPos.end);\r\n                });\r\n            }\r\n    }\r\n\r\n    handleInputChange = () => {\r\n        if(this.state.selected){\r\n          let selectionStartPos = this.state.cursorPos.start;\r\n          let selectionEndPos = this.state.cursorPos.end;\r\n          let textBeforeCursorPosition = this.state.runningValue.substring(0, selectionStartPos);\r\n          let textAfterCursorPosition = this.state.runningValue.substring(selectionEndPos, this.state.runningValue.length);\r\n\r\n          let sliced = textBeforeCursorPosition.slice(0, -1);\r\n          let updatedText = sliced + textAfterCursorPosition;\r\n  \r\n          this.setState(prevState => ({\r\n              runningValue: updatedText\r\n          }));\r\n  \r\n          this.setState(prevState => ({\r\n              cursorPos: {\r\n              start: prevState.cursorPos.start - 1,\r\n              end: prevState.cursorPos.end - 1\r\n              }\r\n          }), () => {\r\n              //scroll to the current position of the cursor\r\n              this.textareaRef.current.setSelectionRange(this.state.cursorPos.start, this.state.cursorPos.end);\r\n              this.textareaRef.current.blur();\r\n              this.textareaRef.current.focus();\r\n              this.textareaRef.current.setSelectionRange(this.state.cursorPos.start, this.state.cursorPos.end);\r\n          });\r\n        }\r\n        else{\r\n            this.setState({runningValue: this.textareaRef.current.value});\r\n        }\r\n    }\r\n\r\n    handleSelect = (event) => {\r\n        if(this.state.runningValue === \"\"){\r\n          this.setState({selected: false});\r\n          this.setState({\r\n            cursorPos: {\r\n              start: 0,\r\n              end: 0\r\n            }\r\n          });\r\n        }\r\n        else{\r\n            this.setState({\r\n                cursorPos: {\r\n                  start: event.target.selectionStart,\r\n                  end: event.target.selectionEnd\r\n                }\r\n              });\r\n            this.setState({selected: true});\r\n        }\r\n    }\r\n\r\n    handleEqualsClick = () => {\r\n        let result = 0;\r\n        let running = this.state.runningValue;\r\n\r\n        try {\r\n            if(this.state.runningValue.includes(\"/0\")){\r\n                alert(\"Cannot divide by 0! Please check your input.\");\r\n                return;\r\n            }\r\n            else{\r\n                result = math.evaluate(running);\r\n                this.setState({ runningValue: result.toString() });\r\n                this.setState({ selected: false });\r\n                let newCursorPos = result.toString().length;\r\n                this.setState({\r\n                    cursorPos: {\r\n                    start: newCursorPos,\r\n                    end: newCursorPos\r\n                    },\r\n                    parenthesesDeleted: false,\r\n                    parenthesesCount: 0,\r\n                    parentheses: \"(\"\r\n                });\r\n            }\r\n        }\r\n        catch {\r\n            alert(\"Invalid calculation!\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleClearClick = () => {\r\n        this.setState({ \r\n            runningValue: \"\", \r\n            selected: false,\r\n            cursorPos: {start: 0, end: 0}\r\n        });\r\n    }\r\n\r\n    handleBackClick = () => {\r\n        if(this.state.selected && this.state.cursorPos.start === 0){\r\n            this.setState({ \r\n                runningValue: \"\", \r\n                selected: false,\r\n                cursorPos: {start: 0, end: 0}\r\n            });\r\n            return;\r\n        }\r\n        else if(this.state.selected){\r\n        let selectionStartPos = this.state.cursorPos.start;\r\n        let selectionEndPos = this.state.cursorPos.end;\r\n        let textBeforeCursorPosition = this.state.runningValue.substring(0, selectionStartPos);\r\n        let textAfterCursorPosition = this.state.runningValue.substring(selectionEndPos, this.state.runningValue.length);\r\n\r\n        let sliced = textBeforeCursorPosition.slice(0, -1);\r\n        let updatedText = sliced + textAfterCursorPosition;\r\n\r\n        this.setState(prevState => ({\r\n            runningValue: updatedText\r\n        }));\r\n\r\n        this.setState(prevState => ({\r\n            cursorPos: {\r\n            start: prevState.cursorPos.start - 1,\r\n            end: prevState.cursorPos.end - 1\r\n            }\r\n        }), () => {\r\n            //scroll to the current position of the cursor\r\n            this.textareaRef.current.setSelectionRange(this.state.cursorPos.start, this.state.cursorPos.end);\r\n            this.textareaRef.current.blur();\r\n            this.textareaRef.current.focus();\r\n            this.textareaRef.current.setSelectionRange(this.state.cursorPos.start, this.state.cursorPos.end);\r\n        });\r\n            }   \r\n            else{\r\n                let sliced = this.state.runningValue.slice(0, -1);\r\n                this.setState({ runningValue: sliced });\r\n            }\r\n    }\r\n\r\n    getTextareaRef = (ref) => {\r\n        this.textareaRef = ref;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Display \r\n                    value={this.state.runningValue} \r\n                    onChange={() => this.handleInputChange()} \r\n                    onSelect={(event) => this.handleSelect(event)}\r\n                    getRef={(ref) => this.getTextareaRef(ref)}/>\r\n\r\n                <Keypad \r\n                    onKeyClick={i => this.handleKeyClick(i)}\r\n                    onEqualsKeyClick={() => this.handleEqualsClick()}\r\n                    onClearKeyClick={() => this.handleClearClick()}\r\n                    onBackKeyClick={() => this.handleBackClick()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Calculator from './components/calculator/Calculator';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Calculator />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}